<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--<bean id="messageProvider" class="com.adamzareba.ch2.HelloWorldMessageProvider"/>-->

    <!-- property injection -->
    <!--<bean id="messageRenderer" class="com.adamzareba.ch2.StandardOutMessageRenderer">-->
    <!--<property name="messageProvider" ref="messageProvider"/>-->
    <!--</bean>-->

    <!-- constructor injection -->
    <!--<bean id="messageProvider" class="com.adamzareba.ch3.dependency.injection.spring.xml.ConfigurableMessageProvider">-->
    <!--<constructor-arg value="Configurable message"/>-->
    <!--</bean>-->

    <bean id="messageProvider"
          class="com.adamzareba.ch3.dependency.injection.spring.xml.ConfigurableMessageProvider"
          c:message="This is a configurable message"/>

    <bean id="messageRenderer" class="com.adamzareba.ch2.StandardOutMessageRenderer"
          p:messageProvider-ref="messageProvider"/>

    <!--<bean id="constructorConfusion" class="com.adamzareba.ch3.dependency.injection.spring.xml.injection.constructor.ConstructorConfusion">-->
    <!--<constructor-arg>-->
    <!--<value>90</value>-->
    <!--</constructor-arg>-->
    <!--</bean>-->

    <bean id="constructorConfusion"
          class="com.adamzareba.ch3.dependency.injection.spring.xml.injection.constructor.ConstructorConfusion">
        <constructor-arg type="int">
            <value>90</value>
        </constructor-arg>
    </bean>

    <!--<bean id="injectSimple" class="com.adamzareba.ch3.dependency.injection.spring.xml.injection.InjectSimple"-->
    <!--p:name="Chris Schaefer" p:age="32" p:height="1.778" p:programmer="true"-->
    <!--p:ageInSeconds="1009843200"/>-->

    <bean id="injectSimpleConfig"
          class="com.adamzareba.ch3.dependency.injection.spring.xml.injection.InjectSimpleConfig"/>

    <bean id="injectSimpleSpel"
          class="com.adamzareba.ch3.dependency.injection.spring.xml.injection.InjectSimpleSpel"
          p:name="#{injectSimpleConfig.name}" p:age="#{injectSimpleConfig.age}"
          p:height="#{injectSimpleConfig.height}" p:programmer="#{injectSimpleConfig.programmer}"
          p:ageInSeconds="#{injectSimpleConfig.ageInSeconds}"/>

    <bean id="oracle" name="wiseworm"
          class="com.adamzareba.ch3.dependency.injection.setters.BookwormOracle"/>

    <!--<bean id="injectRef" class="com.adamzareba.ch3.dependency.injection.spring.xml.injection.InjectRef">-->
    <!--<property name="oracle">-->
    <!--<ref bean="oracle"/>-->
    <!--</property>-->
    <!--</bean>-->

    <bean id="injectRef"
          class="com.adamzareba.ch3.dependency.injection.spring.xml.injection.InjectRef">
        <property name="oracle">
            <ref bean="wiseworm"/>
        </property>
    </bean>

    <!--<bean id="target1" class="com.adamzareba.ch3.dependency.injection.spring.SimpleTarget"-->
    <!--p:val-ref="injectBeanParent"/>-->

    <!--<bean id="target2" class="com.adamzareba.ch3.dependency.injection.spring.SimpleTarget"-->
    <!--p:val-ref="injectBean"/>-->

    <!--<bean id="target3" class="com.adamzareba.ch3.dependency.injection.spring.SimpleTarget">-->
    <!--<property name="val">-->
    <!--<ref parent="injectBean"/>-->
    <!--</property>-->
    <!--</bean>-->

    <bean id="injectBean" class="java.lang.String" c:_0="Child In Bean"/>

    <!-- collections -->
    <bean id="injectCollection"
          class="com.adamzareba.ch3.dependency.injection.spring.xml.injection.collection.CollectionInjection">
        <property name="map">
            <map>
                <entry key="someValue">
                    <value>Hello World!</value>
                </entry>
                <entry key="someBean">
                    <ref bean="oracle"/>
                </entry>
            </map>
        </property>
        <property name="props">
            <props>
                <prop key="firstName">Chris</prop>
                <prop key="secondName">Schaefer</prop>
            </props>
        </property>
        <property name="set">
            <set>
                <value>Hello World!</value>
                <ref bean="oracle"/>
            </set>
        </property>
        <property name="list">
            <list>
                <value>Hello World!</value>
                <ref bean="oracle"/>
            </list>
        </property>
    </bean>

    <!-- lookup method -->
    <bean id="helper"
          class="com.adamzareba.ch3.dependency.injection.spring.xml.injection.lookupMethod.MyHelper"
          scope="prototype"/>

    <bean id="abstractLookupBean"
          class="com.adamzareba.ch3.dependency.injection.spring.xml.injection.lookupMethod.AbstractLookupDemoBean">
        <lookup-method name="getMyHelper" bean="helper"/>
    </bean>

    <bean id="standardLookupBean"
          class="com.adamzareba.ch3.dependency.injection.spring.xml.injection.lookupMethod.StandardLookupDemoBean">
        <property name="myHelper">
            <ref bean="helper"/>
        </property>
    </bean>

    <!-- method replacement -->
    <bean id="methodReplacer"
          class="com.adamzareba.ch3.dependency.injection.spring.xml.injection.methodReplacement.FormatMessageReplacer"/>

    <bean id="replacementTarget"
          class="com.adamzareba.ch3.dependency.injection.spring.xml.injection.methodReplacement.ReplacementTarget">
        <replaced-method name="formatMessage" replacer="methodReplacer">
            <arg-type>String</arg-type>
        </replaced-method>
    </bean>

    <bean id="standardTarget"
          class="com.adamzareba.ch3.dependency.injection.spring.xml.injection.methodReplacement.ReplacementTarget"/>

    <!-- bean naming -->
    <bean id="string1" class="java.lang.String"/>
    <bean name="string2" class="java.lang.String"/>
    <bean class="java.lang.String"/>

    <!-- bean aliasing -->
    <bean id="name1" name="name2 name3,name4;name5" class="java.lang.String"/>
    <alias name="name1" alias="name6"/>

    <bean id="nonSingleton" class="java.lang.String" scope="prototype" c:_0="Chris Schaefer"/>

    <!-- bean dependencies -->
    <bean id="beanA"
          class="com.adamzareba.ch3.dependency.injection.spring.xml.bean.dependency.BeanA"
          depends-on="beanB"/>
    <bean id="beanB"
          class="com.adamzareba.ch3.dependency.injection.spring.xml.bean.dependency.BeanB"/>

    <bean id="foo" class="com.adamzareba.ch3.dependency.injection.spring.xml.bean.dependency.Foo"/>
    <bean id="bar1" class="com.adamzareba.ch3.dependency.injection.spring.xml.bean.dependency.Bar"/>

    <bean id="targetByName" autowire="byName"
          class="com.adamzareba.ch3.dependency.injection.spring.xml.bean.dependency.Target"
          lazy-init="true"/>

    <bean id="targetByType" autowire="byType"
          class="com.adamzareba.ch3.dependency.injection.spring.xml.bean.dependency.Target"
          lazy-init="true"/>

    <bean id="targetConstructor" autowire="constructor"
          class="com.adamzareba.ch3.dependency.injection.spring.xml.bean.dependency.Target"
          lazy-init="true"/>

    <!-- bean inheritance -->
    <bean id="inheritParent" class="com.adamzareba.ch3.dependency.injection.spring.xml.bean.inheritance.SimpleBean"
          p:name="Chris Schaefer" p:age="32"/>

    <bean id="inheritChild" class="com.adamzareba.ch3.dependency.injection.spring.xml.bean.inheritance.SimpleBean" parent="inheritParent"
          p:age="33"/>
</beans>